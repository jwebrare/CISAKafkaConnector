'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="DH32_SQL")>  _
Partial Public Class DH3ClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertGuest(instance As Guest)
    End Sub
  Partial Private Sub UpdateGuest(instance As Guest)
    End Sub
  Partial Private Sub DeleteGuest(instance As Guest)
    End Sub
  Partial Private Sub InsertPersonal(instance As Personal)
    End Sub
  Partial Private Sub UpdatePersonal(instance As Personal)
    End Sub
  Partial Private Sub DeletePersonal(instance As Personal)
    End Sub
  Partial Private Sub InsertROOM(instance As ROOM)
    End Sub
  Partial Private Sub UpdateROOM(instance As ROOM)
    End Sub
  Partial Private Sub DeleteROOM(instance As ROOM)
    End Sub
  Partial Private Sub InsertRoomService(instance As RoomService)
    End Sub
  Partial Private Sub UpdateRoomService(instance As RoomService)
    End Sub
  Partial Private Sub DeleteRoomService(instance As RoomService)
    End Sub
  Partial Private Sub InsertPersonalGroup(instance As PersonalGroup)
    End Sub
  Partial Private Sub UpdatePersonalGroup(instance As PersonalGroup)
    End Sub
  Partial Private Sub DeletePersonalGroup(instance As PersonalGroup)
    End Sub
  Partial Private Sub InsertCommonArea(instance As CommonArea)
    End Sub
  Partial Private Sub UpdateCommonArea(instance As CommonArea)
    End Sub
  Partial Private Sub DeleteCommonArea(instance As CommonArea)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CisaNet.DAL.My.MySettings.Default.DH32_SQLConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Guest() As System.Data.Linq.Table(Of Guest)
		Get
			Return Me.GetTable(Of Guest)
		End Get
	End Property
	
	Public ReadOnly Property Personal() As System.Data.Linq.Table(Of Personal)
		Get
			Return Me.GetTable(Of Personal)
		End Get
	End Property
	
	Public ReadOnly Property ROOM() As System.Data.Linq.Table(Of ROOM)
		Get
			Return Me.GetTable(Of ROOM)
		End Get
	End Property
	
	Public ReadOnly Property RoomService() As System.Data.Linq.Table(Of RoomService)
		Get
			Return Me.GetTable(Of RoomService)
		End Get
	End Property
	
	Public ReadOnly Property PersonalGroup() As System.Data.Linq.Table(Of PersonalGroup)
		Get
			Return Me.GetTable(Of PersonalGroup)
		End Get
	End Property
	
	Public ReadOnly Property CommonAreas() As System.Data.Linq.Table(Of CommonArea)
		Get
			Return Me.GetTable(Of CommonArea)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Guest")>  _
Partial Public Class Guest
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDGuest As Integer
	
	Private _Name As String
	
	Private _Id_Room As Integer
	
	Private _IndxCamera As Short
	
	Private _CodePass As Double
	
	Private _NrBadge As Short
	
	Private _Family As String
	
	Private _bFamily As Boolean
	
	Private _bOneShot As Boolean
	
	Private _CodeReal As System.Nullable(Of Double)
	
	Private _GuestCode As System.Nullable(Of Long)
	
	Private _bShare As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDGuestChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGuestChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnId_RoomChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_RoomChanged()
    End Sub
    Partial Private Sub OnIndxCameraChanging(value As Short)
    End Sub
    Partial Private Sub OnIndxCameraChanged()
    End Sub
    Partial Private Sub OnCodePassChanging(value As Double)
    End Sub
    Partial Private Sub OnCodePassChanged()
    End Sub
    Partial Private Sub OnNrBadgeChanging(value As Short)
    End Sub
    Partial Private Sub OnNrBadgeChanged()
    End Sub
    Partial Private Sub OnFamilyChanging(value As String)
    End Sub
    Partial Private Sub OnFamilyChanged()
    End Sub
    Partial Private Sub OnbFamilyChanging(value As Boolean)
    End Sub
    Partial Private Sub OnbFamilyChanged()
    End Sub
    Partial Private Sub OnbOneShotChanging(value As Boolean)
    End Sub
    Partial Private Sub OnbOneShotChanged()
    End Sub
    Partial Private Sub OnCodeRealChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCodeRealChanged()
    End Sub
    Partial Private Sub OnGuestCodeChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnGuestCodeChanged()
    End Sub
    Partial Private Sub OnbShareChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnbShareChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGuest", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDGuest() As Integer
		Get
			Return Me._IDGuest
		End Get
		Set
			If ((Me._IDGuest = value)  _
						= false) Then
				Me.OnIDGuestChanging(value)
				Me.SendPropertyChanging
				Me._IDGuest = value
				Me.SendPropertyChanged("IDGuest")
				Me.OnIDGuestChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Room", DbType:="Int NOT NULL")>  _
	Public Property Id_Room() As Integer
		Get
			Return Me._Id_Room
		End Get
		Set
			If ((Me._Id_Room = value)  _
						= false) Then
				Me.OnId_RoomChanging(value)
				Me.SendPropertyChanging
				Me._Id_Room = value
				Me.SendPropertyChanged("Id_Room")
				Me.OnId_RoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IndxCamera", DbType:="SmallInt NOT NULL")>  _
	Public Property IndxCamera() As Short
		Get
			Return Me._IndxCamera
		End Get
		Set
			If ((Me._IndxCamera = value)  _
						= false) Then
				Me.OnIndxCameraChanging(value)
				Me.SendPropertyChanging
				Me._IndxCamera = value
				Me.SendPropertyChanged("IndxCamera")
				Me.OnIndxCameraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodePass", DbType:="Float NOT NULL")>  _
	Public Property CodePass() As Double
		Get
			Return Me._CodePass
		End Get
		Set
			If ((Me._CodePass = value)  _
						= false) Then
				Me.OnCodePassChanging(value)
				Me.SendPropertyChanging
				Me._CodePass = value
				Me.SendPropertyChanged("CodePass")
				Me.OnCodePassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NrBadge", DbType:="SmallInt NOT NULL")>  _
	Public Property NrBadge() As Short
		Get
			Return Me._NrBadge
		End Get
		Set
			If ((Me._NrBadge = value)  _
						= false) Then
				Me.OnNrBadgeChanging(value)
				Me.SendPropertyChanging
				Me._NrBadge = value
				Me.SendPropertyChanged("NrBadge")
				Me.OnNrBadgeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Family", DbType:="VarChar(50)")>  _
	Public Property Family() As String
		Get
			Return Me._Family
		End Get
		Set
			If (String.Equals(Me._Family, value) = false) Then
				Me.OnFamilyChanging(value)
				Me.SendPropertyChanging
				Me._Family = value
				Me.SendPropertyChanged("Family")
				Me.OnFamilyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bFamily", DbType:="Bit NOT NULL")>  _
	Public Property bFamily() As Boolean
		Get
			Return Me._bFamily
		End Get
		Set
			If ((Me._bFamily = value)  _
						= false) Then
				Me.OnbFamilyChanging(value)
				Me.SendPropertyChanging
				Me._bFamily = value
				Me.SendPropertyChanged("bFamily")
				Me.OnbFamilyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bOneShot", DbType:="Bit NOT NULL")>  _
	Public Property bOneShot() As Boolean
		Get
			Return Me._bOneShot
		End Get
		Set
			If ((Me._bOneShot = value)  _
						= false) Then
				Me.OnbOneShotChanging(value)
				Me.SendPropertyChanging
				Me._bOneShot = value
				Me.SendPropertyChanged("bOneShot")
				Me.OnbOneShotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodeReal", DbType:="Float")>  _
	Public Property CodeReal() As System.Nullable(Of Double)
		Get
			Return Me._CodeReal
		End Get
		Set
			If (Me._CodeReal.Equals(value) = false) Then
				Me.OnCodeRealChanging(value)
				Me.SendPropertyChanging
				Me._CodeReal = value
				Me.SendPropertyChanged("CodeReal")
				Me.OnCodeRealChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GuestCode", DbType:="BigInt")>  _
	Public Property GuestCode() As System.Nullable(Of Long)
		Get
			Return Me._GuestCode
		End Get
		Set
			If (Me._GuestCode.Equals(value) = false) Then
				Me.OnGuestCodeChanging(value)
				Me.SendPropertyChanging
				Me._GuestCode = value
				Me.SendPropertyChanged("GuestCode")
				Me.OnGuestCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bShare", DbType:="Bit")>  _
	Public Property bShare() As System.Nullable(Of Boolean)
		Get
			Return Me._bShare
		End Get
		Set
			If (Me._bShare.Equals(value) = false) Then
				Me.OnbShareChanging(value)
				Me.SendPropertyChanging
				Me._bShare = value
				Me.SendPropertyChanged("bShare")
				Me.OnbShareChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Personal")>  _
Partial Public Class Personal
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDPersonal As Integer
	
	Private _IDPersonalGroup As Integer
	
	Private _Name As String
	
	Private _Code As Double
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDPersonalChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPersonalChanged()
    End Sub
    Partial Private Sub OnIDPersonalGroupChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPersonalGroupChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As Double)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDPersonal", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDPersonal() As Integer
		Get
			Return Me._IDPersonal
		End Get
		Set
			If ((Me._IDPersonal = value)  _
						= false) Then
				Me.OnIDPersonalChanging(value)
				Me.SendPropertyChanging
				Me._IDPersonal = value
				Me.SendPropertyChanged("IDPersonal")
				Me.OnIDPersonalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDPersonalGroup", DbType:="Int NOT NULL")>  _
	Public Property IDPersonalGroup() As Integer
		Get
			Return Me._IDPersonalGroup
		End Get
		Set
			If ((Me._IDPersonalGroup = value)  _
						= false) Then
				Me.OnIDPersonalGroupChanging(value)
				Me.SendPropertyChanging
				Me._IDPersonalGroup = value
				Me.SendPropertyChanged("IDPersonalGroup")
				Me.OnIDPersonalGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="Float NOT NULL")>  _
	Public Property Code() As Double
		Get
			Return Me._Code
		End Get
		Set
			If ((Me._Code = value)  _
						= false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ROOM")>  _
Partial Public Class ROOM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDRoom As Integer
	
	Private _IDPlant As Integer
	
	Private _IDSite As Integer
	
	Private _IDDriver As Integer
	
	Private _IDRoomType As Integer
	
	Private _Name As String
	
	Private _Numero As Integer
	
	Private _Address As Integer
	
	Private _StepKey As Short
	
	Private _IDDefaultData As Integer
	
	Private _Location As String
	
	Private _CheckState As Boolean
	
	Private _Fault As Boolean
	
	Private _SuiteState As Boolean
	
	Private _ArrivalDate As System.Nullable(Of Date)
	
	Private _DepDate As System.Nullable(Of Date)
	
	Private _IDSuite As Integer
	
	Private _IDRoomFrontDoor As Integer
	
	Private _CheckOutFlag As Boolean
	
	Private _CheckOutMode As Short
	
	Private _CheckOutSetAtTmpo As String
	
	Private _CheckOutDT As System.Nullable(Of Date)
	
	Private _BadgeType As Short
	
	Private _ResetSuiteCheckOut As Boolean
	
	Private _HideRoom As Boolean
	
	Private _IDLinkedRoom As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDRoomChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDRoomChanged()
    End Sub
    Partial Private Sub OnIDPlantChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPlantChanged()
    End Sub
    Partial Private Sub OnIDSiteChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSiteChanged()
    End Sub
    Partial Private Sub OnIDDriverChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDriverChanged()
    End Sub
    Partial Private Sub OnIDRoomTypeChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDRoomTypeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As Integer)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnStepKeyChanging(value As Short)
    End Sub
    Partial Private Sub OnStepKeyChanged()
    End Sub
    Partial Private Sub OnIDDefaultDataChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDDefaultDataChanged()
    End Sub
    Partial Private Sub OnLocationChanging(value As String)
    End Sub
    Partial Private Sub OnLocationChanged()
    End Sub
    Partial Private Sub OnCheckStateChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCheckStateChanged()
    End Sub
    Partial Private Sub OnFaultChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFaultChanged()
    End Sub
    Partial Private Sub OnSuiteStateChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSuiteStateChanged()
    End Sub
    Partial Private Sub OnArrivalDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnArrivalDateChanged()
    End Sub
    Partial Private Sub OnDepDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDepDateChanged()
    End Sub
    Partial Private Sub OnIDSuiteChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSuiteChanged()
    End Sub
    Partial Private Sub OnIDRoomFrontDoorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDRoomFrontDoorChanged()
    End Sub
    Partial Private Sub OnCheckOutFlagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCheckOutFlagChanged()
    End Sub
    Partial Private Sub OnCheckOutModeChanging(value As Short)
    End Sub
    Partial Private Sub OnCheckOutModeChanged()
    End Sub
    Partial Private Sub OnCheckOutSetAtTmpoChanging(value As String)
    End Sub
    Partial Private Sub OnCheckOutSetAtTmpoChanged()
    End Sub
    Partial Private Sub OnCheckOutDTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCheckOutDTChanged()
    End Sub
    Partial Private Sub OnBadgeTypeChanging(value As Short)
    End Sub
    Partial Private Sub OnBadgeTypeChanged()
    End Sub
    Partial Private Sub OnResetSuiteCheckOutChanging(value As Boolean)
    End Sub
    Partial Private Sub OnResetSuiteCheckOutChanged()
    End Sub
    Partial Private Sub OnHideRoomChanging(value As Boolean)
    End Sub
    Partial Private Sub OnHideRoomChanged()
    End Sub
    Partial Private Sub OnIDLinkedRoomChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDLinkedRoomChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRoom", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDRoom() As Integer
		Get
			Return Me._IDRoom
		End Get
		Set
			If ((Me._IDRoom = value)  _
						= false) Then
				Me.OnIDRoomChanging(value)
				Me.SendPropertyChanging
				Me._IDRoom = value
				Me.SendPropertyChanged("IDRoom")
				Me.OnIDRoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDPlant", DbType:="Int NOT NULL")>  _
	Public Property IDPlant() As Integer
		Get
			Return Me._IDPlant
		End Get
		Set
			If ((Me._IDPlant = value)  _
						= false) Then
				Me.OnIDPlantChanging(value)
				Me.SendPropertyChanging
				Me._IDPlant = value
				Me.SendPropertyChanged("IDPlant")
				Me.OnIDPlantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSite", DbType:="Int NOT NULL")>  _
	Public Property IDSite() As Integer
		Get
			Return Me._IDSite
		End Get
		Set
			If ((Me._IDSite = value)  _
						= false) Then
				Me.OnIDSiteChanging(value)
				Me.SendPropertyChanging
				Me._IDSite = value
				Me.SendPropertyChanged("IDSite")
				Me.OnIDSiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDDriver", DbType:="Int NOT NULL")>  _
	Public Property IDDriver() As Integer
		Get
			Return Me._IDDriver
		End Get
		Set
			If ((Me._IDDriver = value)  _
						= false) Then
				Me.OnIDDriverChanging(value)
				Me.SendPropertyChanging
				Me._IDDriver = value
				Me.SendPropertyChanged("IDDriver")
				Me.OnIDDriverChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRoomType", DbType:="Int NOT NULL")>  _
	Public Property IDRoomType() As Integer
		Get
			Return Me._IDRoomType
		End Get
		Set
			If ((Me._IDRoomType = value)  _
						= false) Then
				Me.OnIDRoomTypeChanging(value)
				Me.SendPropertyChanging
				Me._IDRoomType = value
				Me.SendPropertyChanged("IDRoomType")
				Me.OnIDRoomTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Int NOT NULL")>  _
	Public Property Numero() As Integer
		Get
			Return Me._Numero
		End Get
		Set
			If ((Me._Numero = value)  _
						= false) Then
				Me.OnNumeroChanging(value)
				Me.SendPropertyChanging
				Me._Numero = value
				Me.SendPropertyChanged("Numero")
				Me.OnNumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="Int NOT NULL")>  _
	Public Property Address() As Integer
		Get
			Return Me._Address
		End Get
		Set
			If ((Me._Address = value)  _
						= false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StepKey", DbType:="SmallInt NOT NULL")>  _
	Public Property StepKey() As Short
		Get
			Return Me._StepKey
		End Get
		Set
			If ((Me._StepKey = value)  _
						= false) Then
				Me.OnStepKeyChanging(value)
				Me.SendPropertyChanging
				Me._StepKey = value
				Me.SendPropertyChanged("StepKey")
				Me.OnStepKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDDefaultData", DbType:="Int NOT NULL")>  _
	Public Property IDDefaultData() As Integer
		Get
			Return Me._IDDefaultData
		End Get
		Set
			If ((Me._IDDefaultData = value)  _
						= false) Then
				Me.OnIDDefaultDataChanging(value)
				Me.SendPropertyChanging
				Me._IDDefaultData = value
				Me.SendPropertyChanged("IDDefaultData")
				Me.OnIDDefaultDataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Location() As String
		Get
			Return Me._Location
		End Get
		Set
			If (String.Equals(Me._Location, value) = false) Then
				Me.OnLocationChanging(value)
				Me.SendPropertyChanging
				Me._Location = value
				Me.SendPropertyChanged("Location")
				Me.OnLocationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CheckState", DbType:="Bit NOT NULL")>  _
	Public Property CheckState() As Boolean
		Get
			Return Me._CheckState
		End Get
		Set
			If ((Me._CheckState = value)  _
						= false) Then
				Me.OnCheckStateChanging(value)
				Me.SendPropertyChanging
				Me._CheckState = value
				Me.SendPropertyChanged("CheckState")
				Me.OnCheckStateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fault", DbType:="Bit NOT NULL")>  _
	Public Property Fault() As Boolean
		Get
			Return Me._Fault
		End Get
		Set
			If ((Me._Fault = value)  _
						= false) Then
				Me.OnFaultChanging(value)
				Me.SendPropertyChanging
				Me._Fault = value
				Me.SendPropertyChanged("Fault")
				Me.OnFaultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SuiteState", DbType:="Bit NOT NULL")>  _
	Public Property SuiteState() As Boolean
		Get
			Return Me._SuiteState
		End Get
		Set
			If ((Me._SuiteState = value)  _
						= false) Then
				Me.OnSuiteStateChanging(value)
				Me.SendPropertyChanging
				Me._SuiteState = value
				Me.SendPropertyChanged("SuiteState")
				Me.OnSuiteStateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ArrivalDate", DbType:="DateTime")>  _
	Public Property ArrivalDate() As System.Nullable(Of Date)
		Get
			Return Me._ArrivalDate
		End Get
		Set
			If (Me._ArrivalDate.Equals(value) = false) Then
				Me.OnArrivalDateChanging(value)
				Me.SendPropertyChanging
				Me._ArrivalDate = value
				Me.SendPropertyChanged("ArrivalDate")
				Me.OnArrivalDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepDate", DbType:="DateTime")>  _
	Public Property DepDate() As System.Nullable(Of Date)
		Get
			Return Me._DepDate
		End Get
		Set
			If (Me._DepDate.Equals(value) = false) Then
				Me.OnDepDateChanging(value)
				Me.SendPropertyChanging
				Me._DepDate = value
				Me.SendPropertyChanged("DepDate")
				Me.OnDepDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSuite", DbType:="Int NOT NULL")>  _
	Public Property IDSuite() As Integer
		Get
			Return Me._IDSuite
		End Get
		Set
			If ((Me._IDSuite = value)  _
						= false) Then
				Me.OnIDSuiteChanging(value)
				Me.SendPropertyChanging
				Me._IDSuite = value
				Me.SendPropertyChanged("IDSuite")
				Me.OnIDSuiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRoomFrontDoor", DbType:="Int NOT NULL")>  _
	Public Property IDRoomFrontDoor() As Integer
		Get
			Return Me._IDRoomFrontDoor
		End Get
		Set
			If ((Me._IDRoomFrontDoor = value)  _
						= false) Then
				Me.OnIDRoomFrontDoorChanging(value)
				Me.SendPropertyChanging
				Me._IDRoomFrontDoor = value
				Me.SendPropertyChanged("IDRoomFrontDoor")
				Me.OnIDRoomFrontDoorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CheckOutFlag", DbType:="Bit NOT NULL")>  _
	Public Property CheckOutFlag() As Boolean
		Get
			Return Me._CheckOutFlag
		End Get
		Set
			If ((Me._CheckOutFlag = value)  _
						= false) Then
				Me.OnCheckOutFlagChanging(value)
				Me.SendPropertyChanging
				Me._CheckOutFlag = value
				Me.SendPropertyChanged("CheckOutFlag")
				Me.OnCheckOutFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CheckOutMode", DbType:="SmallInt NOT NULL")>  _
	Public Property CheckOutMode() As Short
		Get
			Return Me._CheckOutMode
		End Get
		Set
			If ((Me._CheckOutMode = value)  _
						= false) Then
				Me.OnCheckOutModeChanging(value)
				Me.SendPropertyChanging
				Me._CheckOutMode = value
				Me.SendPropertyChanged("CheckOutMode")
				Me.OnCheckOutModeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CheckOutSetAtTmpo", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property CheckOutSetAtTmpo() As String
		Get
			Return Me._CheckOutSetAtTmpo
		End Get
		Set
			If (String.Equals(Me._CheckOutSetAtTmpo, value) = false) Then
				Me.OnCheckOutSetAtTmpoChanging(value)
				Me.SendPropertyChanging
				Me._CheckOutSetAtTmpo = value
				Me.SendPropertyChanged("CheckOutSetAtTmpo")
				Me.OnCheckOutSetAtTmpoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CheckOutDT", DbType:="DateTime")>  _
	Public Property CheckOutDT() As System.Nullable(Of Date)
		Get
			Return Me._CheckOutDT
		End Get
		Set
			If (Me._CheckOutDT.Equals(value) = false) Then
				Me.OnCheckOutDTChanging(value)
				Me.SendPropertyChanging
				Me._CheckOutDT = value
				Me.SendPropertyChanged("CheckOutDT")
				Me.OnCheckOutDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BadgeType", DbType:="SmallInt NOT NULL")>  _
	Public Property BadgeType() As Short
		Get
			Return Me._BadgeType
		End Get
		Set
			If ((Me._BadgeType = value)  _
						= false) Then
				Me.OnBadgeTypeChanging(value)
				Me.SendPropertyChanging
				Me._BadgeType = value
				Me.SendPropertyChanged("BadgeType")
				Me.OnBadgeTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResetSuiteCheckOut", DbType:="Bit NOT NULL")>  _
	Public Property ResetSuiteCheckOut() As Boolean
		Get
			Return Me._ResetSuiteCheckOut
		End Get
		Set
			If ((Me._ResetSuiteCheckOut = value)  _
						= false) Then
				Me.OnResetSuiteCheckOutChanging(value)
				Me.SendPropertyChanging
				Me._ResetSuiteCheckOut = value
				Me.SendPropertyChanged("ResetSuiteCheckOut")
				Me.OnResetSuiteCheckOutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HideRoom", DbType:="Bit NOT NULL")>  _
	Public Property HideRoom() As Boolean
		Get
			Return Me._HideRoom
		End Get
		Set
			If ((Me._HideRoom = value)  _
						= false) Then
				Me.OnHideRoomChanging(value)
				Me.SendPropertyChanging
				Me._HideRoom = value
				Me.SendPropertyChanged("HideRoom")
				Me.OnHideRoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDLinkedRoom", DbType:="Int NOT NULL")>  _
	Public Property IDLinkedRoom() As Integer
		Get
			Return Me._IDLinkedRoom
		End Get
		Set
			If ((Me._IDLinkedRoom = value)  _
						= false) Then
				Me.OnIDLinkedRoomChanging(value)
				Me.SendPropertyChanging
				Me._IDLinkedRoom = value
				Me.SendPropertyChanged("IDLinkedRoom")
				Me.OnIDLinkedRoomChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RoomService")>  _
Partial Public Class RoomService
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDRoomService As Integer
	
	Private _IDRoom As Integer
	
	Private _ServiceCode As Double
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDRoomServiceChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDRoomServiceChanged()
    End Sub
    Partial Private Sub OnIDRoomChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDRoomChanged()
    End Sub
    Partial Private Sub OnServiceCodeChanging(value As Double)
    End Sub
    Partial Private Sub OnServiceCodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRoomService", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDRoomService() As Integer
		Get
			Return Me._IDRoomService
		End Get
		Set
			If ((Me._IDRoomService = value)  _
						= false) Then
				Me.OnIDRoomServiceChanging(value)
				Me.SendPropertyChanging
				Me._IDRoomService = value
				Me.SendPropertyChanged("IDRoomService")
				Me.OnIDRoomServiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRoom", DbType:="Int NOT NULL")>  _
	Public Property IDRoom() As Integer
		Get
			Return Me._IDRoom
		End Get
		Set
			If ((Me._IDRoom = value)  _
						= false) Then
				Me.OnIDRoomChanging(value)
				Me.SendPropertyChanging
				Me._IDRoom = value
				Me.SendPropertyChanged("IDRoom")
				Me.OnIDRoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ServiceCode", DbType:="Float NOT NULL")>  _
	Public Property ServiceCode() As Double
		Get
			Return Me._ServiceCode
		End Get
		Set
			If ((Me._ServiceCode = value)  _
						= false) Then
				Me.OnServiceCodeChanging(value)
				Me.SendPropertyChanging
				Me._ServiceCode = value
				Me.SendPropertyChanged("ServiceCode")
				Me.OnServiceCodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PersonalGroup")>  _
Partial Public Class PersonalGroup
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDPersonalGroup As Integer
	
	Private _IDService As Integer
	
	Private _Name As String
	
	Private _Code As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDPersonalGroupChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPersonalGroupChanged()
    End Sub
    Partial Private Sub OnIDServiceChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDServiceChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDPersonalGroup", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDPersonalGroup() As Integer
		Get
			Return Me._IDPersonalGroup
		End Get
		Set
			If ((Me._IDPersonalGroup = value)  _
						= false) Then
				Me.OnIDPersonalGroupChanging(value)
				Me.SendPropertyChanging
				Me._IDPersonalGroup = value
				Me.SendPropertyChanged("IDPersonalGroup")
				Me.OnIDPersonalGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDService", DbType:="Int NOT NULL")>  _
	Public Property IDService() As Integer
		Get
			Return Me._IDService
		End Get
		Set
			If ((Me._IDService = value)  _
						= false) Then
				Me.OnIDServiceChanging(value)
				Me.SendPropertyChanging
				Me._IDService = value
				Me.SendPropertyChanged("IDService")
				Me.OnIDServiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="Int NOT NULL")>  _
	Public Property Code() As Integer
		Get
			Return Me._Code
		End Get
		Set
			If ((Me._Code = value)  _
						= false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CommonArea")>  _
Partial Public Class CommonArea
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDCommArea As Integer
	
	Private _IDRoom As Integer
	
	Private _IDGuest As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDCommAreaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCommAreaChanged()
    End Sub
    Partial Private Sub OnIDRoomChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDRoomChanged()
    End Sub
    Partial Private Sub OnIDGuestChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDGuestChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCommArea", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDCommArea() As Integer
		Get
			Return Me._IDCommArea
		End Get
		Set
			If ((Me._IDCommArea = value)  _
						= false) Then
				Me.OnIDCommAreaChanging(value)
				Me.SendPropertyChanging
				Me._IDCommArea = value
				Me.SendPropertyChanged("IDCommArea")
				Me.OnIDCommAreaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRoom", DbType:="Int NOT NULL")>  _
	Public Property IDRoom() As Integer
		Get
			Return Me._IDRoom
		End Get
		Set
			If ((Me._IDRoom = value)  _
						= false) Then
				Me.OnIDRoomChanging(value)
				Me.SendPropertyChanging
				Me._IDRoom = value
				Me.SendPropertyChanged("IDRoom")
				Me.OnIDRoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDGuest", DbType:="Int NOT NULL")>  _
	Public Property IDGuest() As Integer
		Get
			Return Me._IDGuest
		End Get
		Set
			If ((Me._IDGuest = value)  _
						= false) Then
				Me.OnIDGuestChanging(value)
				Me.SendPropertyChanging
				Me._IDGuest = value
				Me.SendPropertyChanged("IDGuest")
				Me.OnIDGuestChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
